#version 450

in vec3 position;
in vec3 normalFlat;
in vec3 normalSmooth;
in vec3 color;
in vec2 uv;

out vec3 o_color;
out vec3 interpolated_color;
out vec3 normalized_uv;
out vec3 light_dir;
out vec3 normal;

vec3 light_color = vec3(1.0, 1.0, 1.0);
vec3 light_position = vec3(1.0, 1.0, 5.0);

mat4 model_view_matrix = mat4(
			      0.57735, -0.33333, 0.57735, 0.00000,
			      0.00000, 0.66667, 0.57735, 0.00000,
			      -0.57735, -0.33333, 0.57735, 0.00000,
			      0.00000, 0.00000, -17, 1.00000);
mat4 projection_matrix = mat4(
			      5.00000, 0.00000, 0.00000, 0.00000,
			      0.00000, 5.00000, 0.00000, 0.00000,
			      0.00000, 0.00000, -1.00020, -1.00000,
			      0.00000, 0.00000, -10.00100, 0.00000);

void main() {
	gl_Position = (projection_matrix * model_view_matrix * vec4(position, 1.0));
	// interpolated_color = normalFlat * color; // q1-2
	light_dir = (light_position - position);
	interpolated_color = vec3(0, 0, 1);
	// o_color = clamp((dot(normalSmooth, normalize(light_dir))) * interpolated_color * light_color, 0, 1); // q3-1
}
